@page "/pdfs"
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation

<h2 class="mb-3">üìÑ PDF Browser (Local Server)</h2>

<div class="row">
    <div class="col-4">
        <input class="form-control mb-2" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå..." @bind="search" @bind:event="oninput" />
        <ul class="list-group" style="max-height: 70vh; overflow:auto;">
            @if (files is null)
            {
                <li class="list-group-item">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</li>
            }
            else if (!Filtered.Any())
            {
                <li class="list-group-item">‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå</li>
            }
            else
            {
                @foreach (var f in Filtered)
                {
                    <li class="@GetItemClasses(f.name)">
                        <button type="button" class="btn btn-link p-0" @onclick="() => Select(f.name)">@f.name</button>
                        <a class="btn btn-sm btn-outline-secondary"
                           href="@($"/api/pdfs/{Uri.EscapeDataString(f.name)}/download")" target="_blank">‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î</a>
                    </li>
                }
            }
        </ul>
    </div>

    <div class="col-8">
        @if (!string.IsNullOrEmpty(selected))
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h5 class="m-0">‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß: @selected</h5>
                <a class="btn btn-sm btn-primary"
                   href="@($"/api/pdfs/{Uri.EscapeDataString(selected)}")" target="_blank">‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà</a>
            </div>

            <iframe @key="selected" style="width:100%; height:75vh; border:1px solid #ccc; border-radius:8px;"
                    src="@($"/api/pdfs/{Uri.EscapeDataString(selected)}")"></iframe>
        }
        else
        {
            <div class="text-muted">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</div>
        }
    </div>
</div>

@code {
    record PdfInfo(string name, long sizeBytes, DateTime modifiedUtc);
    List<PdfInfo>? files;
    string? selected;
    string search = "";

    IEnumerable<PdfInfo> Filtered => (files ?? Enumerable.Empty<PdfInfo>())
        .Where(f => string.IsNullOrWhiteSpace(search) || f.name.Contains(search, StringComparison.OrdinalIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        var endpoint = Navigation.ToAbsoluteUri("/api/pdfs");
        files = await Http.GetFromJsonAsync<List<PdfInfo>>(endpoint);
        selected = files?.FirstOrDefault()?.name;
    }

    void Select(string name)
    {
        if (!string.Equals(selected, name, StringComparison.Ordinal))
        {
            selected = name;
        }
    }

    string GetItemClasses(string name)
    {
        var classes = "list-group-item d-flex justify-content-between align-items-center";
        if (string.Equals(selected, name, StringComparison.Ordinal))
        {
            classes += " active";
        }

        return classes;
    }
}
